plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '5.1.0.4882'
}

group = 'com.example.cis4900.spring'
version = '1.0'
archivesBaseName="waterwise-app"


repositories {
    mavenCentral()
    jcenter()
}

jacoco {
        toolVersion = "0.8.11"
}

checkstyle {
    toolVersion = '10.12.4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'mysql:mysql-connector-java:8.0.11'
    runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

   testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.11.2' // Adding Mockito dependency for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // Adding JUnit 5 dependency for testing
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // Adding JUnit 5 engine for testing
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run

}
jacocoTestReport {
    dependsOn test
    reports {
        html.required.set(true) // Use 'required.set(true)' instead of 'enabled = true'
        xml.required.set(true)
        csv.required.set(false)
    }
}

sonar {
 properties {
   property "sonar.projectName","suwave_backend"
   property "sonar.projectKey","suwave_backend"
   property "sonar.qualitygate.wait", true 
   property "sonar.sources", "src/main/java"
   property "sonar.java.binaries", "build/classes/java/main"
 }
}






